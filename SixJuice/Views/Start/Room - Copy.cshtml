@{
    ViewBag.Title = "SixJuice - " + ViewBag.RoomCode;
    Layout = "~/Views/Shared/_SJLayout.cshtml";
}

<div class="vert10"></div>
<div class="wide vert10">
    <span class="sidepad"></span>
    <span class="medText">Room code:</span>
</div>
<div class="wide vert20">
    <span class="sidepad"></span>
    <span class="bigText">@ViewBag.RoomCode</span>
</div>
<div class="vert5">
    <span class="sidepad"></span>
    <span><input type="text" value="@ViewBag.PlayerX" id="name" /></span>
    <span><button id="setName">OK</button></span>
</div>
<div class="wide vert30">
    <span class="sidepad"></span>
    <span id="playerList" class="sidepadsandwich tall" style="display: inline-block"></span>
</div>
<div class="buttonContainer vert10">
    <span class="sidepad"></span>
    <button id="go" class="tall sidepadsandwich medText">READY</button>
</div>
<div class="vert10">
    <span class="sidepad"></span>
    <span id="message" class="tall sidepadsandwich smallText"></span>
</div>

<script type="text/javascript">
    $(function () {
        hub = $.connection.sixJuiceHub;
        roomCode = "@ViewBag.RoomCode";
        playerName = "@ViewBag.PlayerX";
        playerInfo = null;
        ready = false;
        starting = false;
        
        //Receives player updates
        hub.client.sendPlayerList = function (players) {
            playerInfo = JSON.parse(players);
            console.log(playerInfo);
            updatePlayers();
        }
        //Updates the list of player info
        updatePlayers = function () {
            $('#playerList').empty();
            for (i = 0; i < playerInfo.length; i++) {
                $('#playerList').append('<div class="smallText">'.concat(playerInfo[i].playerName,
                    (playerInfo[i].ready ? " - READY" : ""), '</div>'));
                console.log("--".concat(i, "--"));
            }
            message("", false);
        }

        //Writes message to bottom of page
        message = function (text, isError) {
            if (isError) {
                $('#message').addClass("errorText");
            } else {
                $('#message').removeClass("errorText");
            }
            $('#message').text(text);
        }

        //Called on pushing READY - changes page element states and informs server
        imReady = function () {
            hub.server.playerReady(roomCode, playerName, true);
            ready = true;
            $('#setName').prop('disabled', true);
            $('#name').prop('disabled', true);
            $('#go').text("NOT READY");
        }
        //Called on pushing NOT READY - changes page element states back and informs
        //server
        imNotReady = function () {
            hub.server.playerReady(roomCode, playerName, false);
            ready = false;
            $('#setName').prop('disabled', false);
            $('#name').prop('disabled', false);
            $('#go').text("READY");
        }

        //Called when game starts - disables not ready button and shows message
        hub.client.start = function () {
            starting = true;
            $('#go').prop('disabled', true);
            message("Shuffling the deck...", false);
        }

        //Called when game is set up to trigger navigation to game
        hub.client.goToTable0 = function () {
            hub.server.transition(playerName, roomCode);
        }
        hub.client.goToTable1 = function () {
            window.location.href = getBaseURL().concat('/Game/?roomCode=', roomCode, '&playerName=', playerName);
        }

        //Called on reconnected event - calls back to server with name
        hub.client.identify = function () {
            hub.server.identify(playerName, roomCode);
        }

        //Helper for URL construction
        getBaseURL = function () {
            pathArray = location.href.split('/');
            protocol = pathArray[0];
            host = pathArray[2];
            return protocol.concat('//', host);
        }

        //Reliably triggers OnDisconnected immediately when the page is left for any reason
        // Note: using hub.stop() (or $.connection.hub.stop()) doesn't work in all contexts
        window.onbeforeunload = function () {
            hub.server.stopConnection();
        }

        //Convenient messaging function for debugging
        hub.client.receiveMessage = function (messageContents) {
            message(messageContents, false);
            console.log(messageContents);
        }

        $.connection.hub.start().done(function () {
            // Navigating to this page joins the room
            message("Joining room...", false);
            hub.server.joinRoomAs(roomCode, "@ViewBag.PlayerX");

            $('#setName').click(function () {
                message("Changing name...", false);
                playerName = $('#name').val();
                hub.server.changeName(roomCode, playerName);
            });
            $('#go').click(function () {
                if (ready) {
                    imNotReady();
                } else {
                    imReady();
                }
            });
        });
    });
</script>

